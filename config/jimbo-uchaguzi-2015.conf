


# The # character at the beginning of a line indicates a comment. Use
# comments to describe your configuration.
input {
  stdin { }
}
# The filter part of this file is commented out to indicate that it is
# optional.
filter {


   grok {
         break_on_match => false
         match => [ "message" , "(?<CONSTITUENCY>Jimbo [a-zA-Z ]+)" ]
         match => [ "message" , "(?<REGION>, [ a-zA-Z: ]+)" ]
         match => [ "message" , "(?<TOTAL_VOTES>Kura[0-9 :,]{1,10})" ]
         match => [ "message" , "(?<CCM>(MagufuliJP) )" ]
         match => [ "message" , "(?<CCM_VOTES_TEMP>\(CCM\)[0-9 :,]{1,10})" ]
         match => [ "CCM_VOTES_TEMP" , "(?<CCM_VOTES>[0-9,]{1,10})" ]
         match => [ "message", "(?<CHADEMA>(edwardlowassatz))" ]
         match => [ "message", "(?<CHADEMA_VOTES_TEMP>\(Chadema\)[0-9 :,]{1,10})" ]
         match => [ "CHADEMA_VOTES_TEMP", "(?<CHADEMA_VOTES>[0-9,]{1,10})" ]
  }

  mutate {
    gsub => ["CCM_VOTES", ",", "",
             "CHADEMA_VOTES", ",", "",
             "TOTAL_VOTES","[a-zA-z: ,]","", 
             "CONSTITUENCY", "Jimbo la ", "",
             "CONSTITUENCY", "Jimbo ", "",
             "CONSTITUENCY", " Kura", "",
             "REGION", " Kura: " ,"",
             "REGION", ", " ,"",
             "CCM", " " ,"" , "CHADEMA", " " ,""]
  }

  mutate{
    convert => { "CCM_VOTES" => "integer" }
    convert => { "CHADEMA_VOTES" => "integer" }
    convert => { "TOTAL_VOTES" => "integer" }
  }

    
}
output {
 if "Jimbo " in [message] and "Kura:" in [message] and "@MagufuliJP (CCM):" in [message] and "@edwardlowassatz (Chadema):" in [message]{
     stdout { codec => rubydebug }

   #Elasticsearch
 }
 

}

